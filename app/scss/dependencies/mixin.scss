/// This mixin allows you  to add styles to a specific Media query inside the style selector specifying which Breaking Point you want to choose.
/// @group Mixins
/// @parameter $point - This parameter decide which one of Breaking Point you want to use: "bp-papabear" (Desktop), "bp-mamabear" (Tablet) and "bp-babybear" (Mobile).
@mixin bp($point) {
  $bp-babybear: "(max-width: 320px)";
  $bp-kidbear: "(max-width: 359px)";
  $bp-mamabear: "(max-width: 720px)";
  $bp-papabear: "(max-width: 1020px)";

  @if $point == papa-bear {
    @media #{$bp-papabear} { @content; }
  }  @else if $point == mama-bear {
    @media #{$bp-mamabear} { @content; }
  }  @else if $point == kid-bear {
    @media #{$bp-kidbear} { @content; }
  }  @else if $point == baby-bear {
    @media #{$bp-babybear}  { @content; }
  }

}

// Add empty character at the end of the element
@mixin addspace() {
  &:after {
    content: ' ';
  }
}

/// Shortcut mixin to add new font-face compatible with all browser. To work you need to add the follow formats of font:".eot", ".woff", ".ttf" and "svg".
/// @group Mixins
/// @parameter $style-name - Name of the font style
/// @parameter $file  - Name of the font file.
/// @parameter $weight [normal] - With this variable you can add how much weight you want to add to this specific font. EX: Bold
/// @parameter $style [normal] - With this variable you can add a font style to this specific font. EX: Italic

@mixin font-face($style-name, $file, $weight: unquote("normal"), $style: unquote("normal")) {
  $filepath: "../../fonts/" + $file;
  @font-face {
    font-family: "#{$style-name}";
    src: url($filepath + ".eot");
    src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
    font-weight: $weight;
    font-style: unquote($style);
  }
}
